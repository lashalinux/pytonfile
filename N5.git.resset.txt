git reset — რისთვის არის საჭირო?
git reset Git-ის ერთ-ერთი ყველაზე ძლიერი ინსტრუმენტია და გამოიყენება:

"დაბრუნებისთვის წინა commit-ებზე, ფაილების unstaging-ზე ან ცვლილებების გაუქმებაზე."

3 ძირითადი შემთხვევა, რისთვისაც გამოიყენება git reset:
1. Commit-ის გაუქმება — უკან დაბრუნება
თუ უკვე გააკეთე commit და გინდა, თითქოს ის არ არსებობდეს:

bash
კოდის კოპირება
git reset --soft HEAD~1
→ commit გაუქმდება, მაგრამ ფაილები დარჩება stage-ზე.

2. Commit გაუქმდება და ფაილებიც unstaged გახდება:
bash
კოდის კოპირება
git reset --mixed HEAD~1
→ commit გაუქმდება და ფაილებიც დაბრუნდება სამუშაო ფაზაში. (ეს არის ნაგულისხმევი ქცევა)

3. commit-ი გაუქმდება და ფაილებიც წაიშლება სამუშაო ფოლდერიდან:
bash
კოდის კოპირება
git reset --hard HEAD~1
→ commit გაქრება და ცვლილებები წაიშლება — ფაილები დაიკარგება!

ფრთხილად იყავი --hard გამოყენებისას!

HEAD~1 რას ნიშნავს?
HEAD — არის მიმდინარე commit

HEAD~1 — წინა commit

HEAD~2 — ორი commit-ით უკან

სხვა გამოყენება — ფაილების unstaging
თუ შეცდომით დაამატე ფაილი git add-ით, და გინდა წაიღო სტაგიდან:

bash
კოდის კოპირება
git reset file.txt
→ ფაილი აღარ იქნება stage-ზე, მაგრამ ცვლილებები შენარჩუნდება.

დასასრული: როგორ გავაუქმოთ ბოლო commit:
შეინარჩუნო ფაილები და commit გააუქმო:

bash
კოდის კოპირება
git reset --soft HEAD~1
commit გააუქმო და ფაილები unstaged გახდეს:

bash
კოდის კოპირება
git reset --mixed HEAD~1
ყველაფერი წაიშალოს (საშიშია!):

bash
კოდის კოპირება
git reset --hard HEAD~1
